-- Load OrionLib
local OrionLib = loadstring(game:HttpGet("https://raw.githubusercontent.com/Giangplay/Script/main/Orion_Library_PE_V2.lua"))()

-- Check if OrionLib loaded successfully
if not OrionLib then
    warn("Failed to load OrionLib")
    return
end

-- Create the main window
local Window = OrionLib:MakeWindow({
    Name = "Slap Battles Hub",
    HidePremium = false,
    SaveConfig = true,
    ConfigFolder = "SlapBattlesHub"
})

print("OrionLib window created.")

-- Create Misc Tab
local MiscTab = Window:MakeTab({
    Name = "Misc",
    Icon = "rbxassetid://6031071050",
    PremiumOnly = false
})

-- TextLabel for displaying messages
local messageLabel = MiscTab:AddTextLabel({
    Name = "MessageLabel",
    Text = "", -- Initially empty
    TextColor = Color3.fromRGB(255, 0, 0), -- Red text color
    Font = Enum.Font.SourceSansBold,
    TextSize = 18,
    TextTransparency = 0,
    Visible = false, -- Initially hidden
})

-- Function to display messages on the TextLabel
local function displayMessage(message)
    messageLabel.Text = message
    messageLabel.Visible = true
end

-- Add Spam Swordfighter button under Misc Tab
local swordfighterSpamRunning = false
local swordfighterSpamThread
local swordSpamRunning = false
local swordSpamThread

-- Create options for spam ability
MiscTab:AddButton({
    Name = "Spam Swordfighter Ability",
    Callback = function()
        -- Check if the player has "Swordfighter" or "Retro" equipped
        if game.Players.LocalPlayer.leaderstats.Glove.Value == "Swordfighter" or game.Players.LocalPlayer.leaderstats.Glove.Value == "Retro" then
            if swordfighterSpamRunning then
                OrionLib:MakeNotification({
                    Name = "Swordfighter Ability Spam",
                    Content = "Already running!",
                    Image = "rbxassetid://6031071050",
                    Time = 3
                })
                return
            end

            OrionLib:MakeNotification({
                Name = "Swordfighter Ability Spam",
                Content = "Swordfighter Ability Spam Activated!",
                Image = "rbxassetid://6031071050",
                Time = 3
            })

            swordfighterSpamRunning = true
            swordfighterSpamThread = coroutine.create(function()
                while swordfighterSpamRunning do
                    pcall(function()
                        game:GetService("ReplicatedStorage"):WaitForChild("GeneralAbility"):FireServer()
                    end)
                    wait(0.01) -- Adjust if needed
                end
            end)
            coroutine.resume(swordfighterSpamThread)
        else
            -- Display custom message if the player does not have the correct glove
            displayMessage("Nice try bozo, try get badges tab that coming later soon")
            wait(3) -- Message will be shown for 3 seconds
            displayMessage("") -- Clear message
        end
    end
})

-- Add Spam Sword button under Misc Tab
MiscTab:AddButton({
    Name = "Spam Sword",
    Callback = function()
        -- Check if the player has "Swordfighter" or "Retro" equipped
        if game.Players.LocalPlayer.leaderstats.Glove.Value == "Swordfighter" or game.Players.LocalPlayer.leaderstats.Glove.Value == "Retro" then
            if swordSpamRunning then
                OrionLib:MakeNotification({
                    Name = "Sword Spam",
                    Content = "Already running!",
                    Image = "rbxassetid://6031071050",
                    Time = 3
                })
                return
            end

            OrionLib:MakeNotification({
                Name = "Sword Spam",
                Content = "Sword Spam Activated!",
                Image = "rbxassetid://6031071050",
                Time = 3
            })

            swordSpamRunning = true
            swordSpamThread = coroutine.create(function()
                while swordSpamRunning do
                    local args = {
                        "swing_sword"
                    }
                    pcall(function()
                        game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("swordevent"):FireServer(unpack(args))
                    end)
                    wait(0.01) -- Adjust if needed
                end
            end)
            coroutine.resume(swordSpamThread)
        else
            -- Display custom message if the player does not have the correct glove
            displayMessage("Nice try bozo, try get badges tab that coming later soon")
            wait(3) -- Message will be shown for 3 seconds
            displayMessage("") -- Clear message
        end
    end
})

-- Add Stop Swordfighter Ability Spam functionality
MiscTab:AddButton({
    Name = "Stop Swordfighter Ability Spam",
    Callback = function()
        if swordfighterSpamRunning then
            swordfighterSpamRunning = false
            OrionLib:MakeNotification({
                Name = "Swordfighter Ability Spam",
                Content = "Swordfighter Ability Spam Stopped!",
                Image = "rbxassetid://6031071050",
                Time = 3
            })
        else
            OrionLib:MakeNotification({
                Name = "Swordfighter Ability Spam",
                Content = "It's not running.",
                Image = "rbxassetid://6031071050",
                Time = 3
            })
        end
    end
})

-- Add Stop Sword Spam functionality
MiscTab:AddButton({
    Name = "Stop Sword Spam",
    Callback = function()
        if swordSpamRunning then
            swordSpamRunning = false
            OrionLib:MakeNotification({
                Name = "Sword Spam",
                Content = "Sword Spam Stopped!",
                Image = "rbxassetid://6031071050",
                Time = 3
            })
        else
            OrionLib:MakeNotification({
                Name = "Sword Spam",
                Content = "It's not running.",
                Image = "rbxassetid://6031071050",
                Time = 3
            })
        end
    end
})

print("Slap Battles Hub UI is fully initialized.")
